THE TOKEN HAS BECAME API KEY like here : HARDWARE

from qiskit import QuantumCircuit
from qiskit_ibm_runtime import QiskitRuntimeService, SamplerV2 as Sampler

# Create empty circuit
example_circuit = QuantumCircuit(2)
example_circuit.measure_all()

service = QiskitRuntimeService(channel="ibm_cloud", token="2wmA_BpLEyJtw3dRJBVrIzXbKSCuNFTkk9-_N2PfUh4Q", instance="crn:v1:bluemix:public:quantum-computing:us-east:a/2f65af1de45a479c978de8d7db945b1b:0180c04d-ad4d-4ce6-ba28-14dc3345f618::")
backend = service.least_busy()

sampler = Sampler(backend)
job = sampler.run([example_circuit])
print(f"job id: {job.job_id()}")
result = job.result()
print(result)

---------------------------SIMILATOR:

from qiskit_ibm_runtime import QiskitRuntimeService, Session, Options, Sampler

service = QiskitRuntimeService(channel="ibm_cloud", token="XfQy3yrTr1-Y54exSFPTHoIJwocJNbGhcoUzWXRi_YYC", instance="crn:v1:bluemix:public:quantum-computing:us-east:a/e6bb54879eac78ddeaf1d5d298c6dd1c:5c575744-4e31-4aae-9fde-d26398b25380::")
options = Options(optimization_level=1)

with Session(service=service, backend="ibmq_qasm_simulator"):
    sampler = Sampler(options=options)


# Prepare the input circuit.

from qiskit import QuantumCircuit

bell = QuantumCircuit(2)
bell.h(0)
bell.cx(0, 1)
bell.measure_all()

# Execute the Bell circuit
with Session(service=service, backend="ibmq_qasm_simulator"):
    sampler = Sampler(options=options)
    job = sampler.run(circuits=bell)
    print(job.result())

    # You can invoke run() multiple times.
    job = sampler.run(circuits=bell)
    print(job.result())

--------------------------------

API_KEY = "Kz14SG5DnDhXViiE3E3x5zOF9xfEyvMRbJ0Ubd806AWf"
service = QiskitRuntimeService(channel="ibm_cloud", token=API_KEY)

{
  "name": "DRAGONIQUE",
  "description": "IBM Quantum API key",
  "createdAt": "2025-06-07T22:21+0000",
  "apikey": "CqDVGOqRlxD6xSed1VRU1-4XvtmEFRp34ULoKBls0sJ7"
}
